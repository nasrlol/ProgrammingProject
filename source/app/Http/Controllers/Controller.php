<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Http\JsonResponse;
use Illuminate\View\View;
use Illuminate\Support\Facades\Http;


abstract class Controller
{
    protected string $apiUrl = 'http://10.2.160.208/api/';
    // API URLs for appointments, students, and companies, based on the provided URL structure
    protected string $appointmentApiUrl;
    protected string $studentsApiUrl;
    protected string $companiesApiUrl;
    protected string $connectionsApiUrl;

    public function __construct() {
        $this->appointmentApiUrl = $this->apiUrl . 'appointments';
        $this->studentsApiUrl = $this->apiUrl . 'students';
        $this->companiesApiUrl = $this->apiUrl .'companies';
        $this->connectionsApiUrl = $this->apiUrl . 'connections';
    }

    #bottom functions generated by github copilot. Use a student or company object to get the name of the student or company
    protected function translateStudent($id)
    {
        
        $student = Http::get("{$this->studentsApiUrl}/{$id}")->json('data');

        if (isset($student['first_name']) && isset($student['last_name'])) {
                $id = $student['first_name'] . ' ' . $student['last_name'];
            } else {
                $id = 'Onbekende student';
            }
            return $id;
    }
    protected function translateCompany($id)
    {
        $company = Http::get("{$this->companiesApiUrl}/{$id}")->json('data');
        if (isset($company['name'])) {
            $id = $company['name'];
        } else {
            $id = 'Onbekend bedrijf';
        }
        return $id;
    }
    protected function get_connections($id, $type)
    {   
        $type = strtolower($type . '_id');
        $response = Http::get("{$this->connectionsApiUrl}");
        
        $response = $response->json('data');
        // Filter connections based on the provided ID and type
        $connections = collect($response)->where($type, $id)->all();
        return $connections;
    }
}
